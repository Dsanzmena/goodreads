
# ===============================
# = WEB SERVER
# ===============================

server.context-path=/goodreads
server.display-name=GoodReads

# the servlet path, defaults to '/'
server.servlet-path=/goodreads 
server.servlet.contextPath=/goodreads

# P\u00e1gina de error
server.error.whitelabel.enabled=true 
#Deshabilitar cuando creemos pagina de error.


server.port=8082
server.address= localhost

security.basic.enabled=false

#server.session-timeout= # session timeout in seconds
#server.tomcat.access-log-pattern= # log pattern of the access log
#server.tomcat.access-log-enabled=false # is access logging enabled
#server.tomcat.protocol-header=x-forwarded-proto # ssl forward headers
#server.tomcat.remote-ip-header=x-forwarded-for
#server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)
#server.tomcat.background-processor-delay=30; # in seconds
#server.tomcat.max-threads = 0 # number of threads in protocol handler
# character encoding to use for URL decoding
server.tomcat.uri-encoding=UTF-8

#Se permite el registro de reemplazo cuando se encuentra un bean con el mismo nombre 
spring.main.allow-bean-definition-overriding=true
spring.http.encoding.charset=UTF-8


# ===============================
# = INTERNATIONALIZATION
# ===============================
spring.messages.basename=messages
spring.messages.cacheSeconds=-1
spring.messages.encoding=UTF-8

# ===============================
# = DEV TOOLS
# ===============================
spring.devtools.livereload.enabled=true


# ===============================
# = THYMELEAF
# ===============================
spring.thymeleaf.mode=HTML
#spring.thymeleaf.mode=HTML5

# cache, set to false for hot refresh
#spring.thymeleaf.cache=true 
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8


# ===============================
# = LOG
# ===============================
logging.level.com.protecmedia.titer = DEBUG
logging.path = C:\eclipse\logs\GoodReads
logging.file = goodreads.txt
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO

spring.logging.level.org.hibernate.SQL = DEBUG
logging.level.org.springframework.jdbc.core = DEBUG

#A�adidos
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE

log4j.logger.org.thymeleaf=DEBUG
log4j.logger.org.thymeleaf.TemplateEngine.CONFIG=TRACE
log4j.logger.org.thymeleaf.TemplateEngine.TIMER=TRACE
log4j.logger.org.thymeleaf.TemplateEngine.cache.TEMPLATE_CACHE=TRACE



# ===============================
# = DATA SOURCE
# ===============================

# MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/goodreads
#spring.datasource.url=jdbc:mysql://localhost:3306/titer?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=webgr
spring.datasource.password=web





#Indica el driver/lib para conectar java a mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.driver-class-name =com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)

#El numero maximo de conexiones activas que el pool puede asignar al mismo tiempo
spring.datasource.max-active=5

#Numero maximo de conexiones activas al mismo tiempo. 
#Si esta habilitado, el limite de conexion se verificaran periodicamente. 
#Se liberaran las conexiones que excedan el valor establecido por esta propiedad y cuyo tiempo de inactividad exceda minEvictableIdleTimeMillis
#Mismo valor que maxActive
spring.datasource.max-idle=5

#El numero minimo de conexiones que se mantienen siempre en el pool. 
#Si el numero de conexiones en el grupo es inferior a este valor, se creara una nueva conexion. 
#Si la verificacion de la conexion falla, se reduciran a este valor 
#Mismo valor que initialSize
spring.datasource.min-idle=1

#El numero inicial de conexiones creadas cuando se inicia el pool
spring.datasource.initial-size=1

#El tiempo maximo de espera (milisegundos), si el tiempo de espera excede este tiempo cuando no hay conexion disponible, se lanzara una excepcion
#Cuando se saca una conexion del pool, si la autenticacion falla, elimine la conexion del grupo e intente sacar otra conexion
spring.datasource.test-on-borrow=true

#Verificar la conexion en el pool, la conexion se reciclara si la verificacion falla (Necesario en produccion)
spring.datasource.testWhileIdle = true
#La consulta SQL utilizada para verificar la conexion antes de que el pool lo asigne
spring.datasource.validationQuery = SELECT 1


#Determina con que frecuencia el subproceso verifica las conexiones inactivas en el pool o descarta las conexiones.
#Este valor no debe ser inferior a 1 segundo. 
spring.datasource.time-between-eviction-runs-millis = 3600000

#tiempo minimo para que una conexion permanezca inactiva en el pool sin ser reciclada (milisegundos)
#El tiempo minimo para que una conexion permanezca inactiva en el grupo sin ser reciclada (milisegundos) 
spring.datasource.min-evictable-idle-time-millis=60000


#Connection Pool Defaults
spring.datasource.dbcp2.initial-size = 50
spring.datasource.dbcp2.max-idle = 50
spring.datasource.dbcp2.default-query-timeout = 10000
spring.datasource.dbcp2.default-auto-commit = true


# ===============================
# = JPA / HIBERNATE
# ===============================

# Muestra en consola las consultas realizadas
spring.jpa.show-sql = true 

#A�adidos
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#Agrupar inserciones por lotes 
# tamano del lote
spring.jpa.properties.hibernate.jdbc.batch_size=30

#Permite la insercion por lotes para tablas multiples
spring.jpa.properties.hibernate.order_inserts=true

#Permite la actualizacion por lotes para tablas multiples
spring.jpa.properties.hibernate.order_updates=true

#Permite agrupar varias declaraciones de actualizacion y enviarlas a la base de datos de una sola vez.
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true






# SOLR (SolrProperties})
#spring.data.solr.host=http://127.0.0.1:8983/solr
#spring.data.solr.zkHost=
#spring.data.solr.repositories.enabled=true # if spring data repository support is enabled


# VELOCITY TEMPLATES (VelocityAutoConfiguration)

#spring.velocity.allowRequestOverride=false
#spring.velocity.allowSessionOverride=false
#spring.velocity.cache=true
#spring.velocity.checkTemplateLocation=true
#spring.velocity.contentType=text/html
#spring.velocity.dateToolAttribute=
#spring.velocity.exposeRequestAttributes=false
#spring.velocity.exposeSessionAttributes=false
#spring.velocity.exposeSpringMacroHelpers=false
#spring.velocity.numberToolAttribute=
#spring.velocity.prefix=
#spring.velocity.properties.*=
#spring.velocity.requestContextAttribute=
#spring.velocity.resourceLoaderPath=classpath:/templates/
#spring.velocity.suffix=.vm
#spring.velocity.templateEncoding=UTF-8
#spring.velocity.viewNames= # whitelist of view names that can be resolved





